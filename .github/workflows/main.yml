name: Build libsm64

on: [push, pull_request]

jobs:
  Build:
    name: Build libsm64 for ${{ matrix.identifier }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: linux
            os: ubuntu-latest
          - identifier: windows
            os: ubuntu-latest
          - identifier: emscripten
            os: ubuntu-latest
          - identifier: macos
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: (Emscripten) Set up Emscripten
        uses: mymindstorm/setup-emsdk@v14
        if: ${{ startsWith(matrix.identifier, 'windows') }}

      - name: (Windows) Set up MinGW
        if: ${{ startsWith(matrix.identifier, 'emscripten') }}
        uses: egor-tensin/setup-mingw@v2

      - name: (Windows) Prepare cross compilation
        if: ${{ startsWith(matrix.identifier, 'windows') }}
        shell: sh
        run: |
          echo "OS=Windows_NT" >> $GITHUB_ENV

      - name: (Linux and Emscripten) Install dependencies
        if: ${{ startsWith(matrix.identifier, 'linux') || startsWith(matrix.identifier, 'emscripten') }}
        run: |
          sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
          sudo apt-get update -y -qq
          sudo apt-get install libsdl2-dev libglew-dev

      - name: Build shared library
        if: ${{ !startsWith(matrix.identifier, 'emscripten') }}
        run: |
          make lib -j`nproc`

      - name: Build test executable
        if: ${{ startsWith(matrix.identifier, 'linux') }}
        run: |
          make test -j`nproc`

      - name: (Emscripten) Build emscripten wasm module
        if: ${{ startsWith(matrix.identifier, 'emscripten') }}
        run: |
          emmake make CC=emcc
          emcc ./dist/libsm64.so -o ./dist/libsm64.js -s EXPORT_ES6=1 -s MODULARIZE=1

      - name: Upload build
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: libsm64_${{ matrix.identifier }}
          path: |
            ./README.md
            ./dist
            ./run-test

  #Release:
  #  name: "Snapshot Release"
  #  runs-on: "ubuntu-latest"
  #  needs: Build

  #  steps:
  #    - name: Download artifacts
  #      uses: actions/download-artifact@v3

  #    - name: Create a Release
  #      uses: "marvinpinto/action-automatic-releases@latest"
  #      with:
  #        repo_token: "${{ secrets.GITHUB_TOKEN }}"
  #        automatic_release_tag: "latest"
  #        prerelease: true
  #        title: "Snapshot Build"
  #        files: |
  #         ./README.md
  #         ./dist
